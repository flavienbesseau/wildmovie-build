{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/flaviostark/wildcodeschool/projets/tlse0920-js-p2-wildmovies/src/components/MyList.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport PropTypes from \"prop-types\";\nimport Footer from \"./Footer\";\nimport Movie from \"./Movie\";\nimport keyApi from \"../const/apiKey\";\nimport { FixFooter, Container, H1, Div } from \"../style/MyListCss\";\n\nclass MyList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getAllFavorites = () => {\n      const {\n        favorites\n      } = this.props;\n      favorites.forEach(id => this.getInfosMovieFavorite(id));\n    };\n\n    this.getInfosMovieFavorite = id => {\n      const url = `https://api.themoviedb.org/3/movie/${id}?api_key=${keyApi}&language=en-US`;\n      const {\n        infoFavorites\n      } = this.state;\n      axios.get(url).then(response => response.data).then(informationsFilm => {\n        infoFavorites.push(informationsFilm);\n        this.setState({\n          infoFavorites\n        });\n      });\n    };\n\n    this.getAllAlreadySeen = () => {\n      const {\n        alreadySeen\n      } = this.props;\n      alreadySeen.forEach(id => this.getInfosAlreadySeen(id));\n    };\n\n    this.getInfosAlreadySeen = id => {\n      const url = `https://api.themoviedb.org/3/movie/${id}?api_key=${keyApi}&language=en-US`;\n      const {\n        infoAlreadySeen\n      } = this.state;\n      axios.get(url).then(response => response.data).then(informationsFilm => {\n        infoAlreadySeen.push(informationsFilm);\n        this.setState({\n          infoAlreadySeen\n        });\n      });\n    };\n\n    this.state = {\n      infoFavorites: [],\n      infoAlreadySeen: []\n    };\n  }\n\n  componentDidMount() {\n    this.getAllFavorites();\n    this.getAllAlreadySeen();\n  }\n\n  componentDidUpdate(prevProps) {\n    const prevFavorites = prevProps.favorites;\n    const prevAlreadySeen = prevProps.alreadySeen;\n    const {\n      favorites,\n      alreadySeen\n    } = this.props;\n\n    if (JSON.stringify(prevFavorites) !== JSON.stringify(favorites)) {\n      this.getAllFavorites();\n    }\n\n    if (JSON.stringify(prevAlreadySeen) !== JSON.stringify(alreadySeen)) {\n      this.getAllAlreadySeen();\n    }\n  }\n\n  render() {\n    const {\n      infoFavorites,\n      infoAlreadySeen\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(H1, {\n          children: \"Favorite List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Div, {\n          children: infoFavorites.map(essai => /*#__PURE__*/_jsxDEV(Movie, {\n            posterPath: essai.poster_path,\n            title: essai.original_title,\n            id: essai.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(H1, {\n          children: \"Already seen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Div, {\n          children: infoAlreadySeen.map(essai2 => /*#__PURE__*/_jsxDEV(Movie, {\n            posterPath: essai2.poster_path,\n            title: essai2.original_title,\n            id: essai2.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FixFooter, {\n        children: /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nMyList.propTypes = {\n  alreadySeen: PropTypes.arrayOf(PropTypes.object).isRequired,\n  favorites: PropTypes.arrayOf(PropTypes.object).isRequired\n};\nexport default MyList;","map":{"version":3,"sources":["/home/flaviostark/wildcodeschool/projets/tlse0920-js-p2-wildmovies/src/components/MyList.jsx"],"names":["React","Component","axios","PropTypes","Footer","Movie","keyApi","FixFooter","Container","H1","Div","MyList","constructor","props","getAllFavorites","favorites","forEach","id","getInfosMovieFavorite","url","infoFavorites","state","get","then","response","data","informationsFilm","push","setState","getAllAlreadySeen","alreadySeen","getInfosAlreadySeen","infoAlreadySeen","componentDidMount","componentDidUpdate","prevProps","prevFavorites","prevAlreadySeen","JSON","stringify","render","map","essai","poster_path","original_title","essai2","propTypes","arrayOf","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport PropTypes from \"prop-types\";\nimport Footer from \"./Footer\";\nimport Movie from \"./Movie\";\nimport keyApi from \"../const/apiKey\";\nimport { FixFooter, Container, H1, Div } from \"../style/MyListCss\";\n\nclass MyList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      infoFavorites: [],\n      infoAlreadySeen: [],\n    };\n  }\n\n  componentDidMount() {\n    this.getAllFavorites();\n    this.getAllAlreadySeen();\n  }\n\n  componentDidUpdate(prevProps) {\n    const prevFavorites = prevProps.favorites;\n    const prevAlreadySeen = prevProps.alreadySeen;\n    const { favorites, alreadySeen } = this.props;\n\n    if (JSON.stringify(prevFavorites) !== JSON.stringify(favorites)) {\n      this.getAllFavorites();\n    }\n\n    if (JSON.stringify(prevAlreadySeen) !== JSON.stringify(alreadySeen)) {\n      this.getAllAlreadySeen();\n    }\n  }\n\n  getAllFavorites = () => {\n    const { favorites } = this.props;\n    favorites.forEach((id) => this.getInfosMovieFavorite(id));\n  };\n\n  getInfosMovieFavorite = (id) => {\n    const url = `https://api.themoviedb.org/3/movie/${id}?api_key=${keyApi}&language=en-US`;\n    const { infoFavorites } = this.state;\n    axios\n      .get(url)\n      .then((response) => response.data)\n      .then((informationsFilm) => {\n        infoFavorites.push(informationsFilm);\n        this.setState({ infoFavorites });\n      });\n  };\n\n  getAllAlreadySeen = () => {\n    const { alreadySeen } = this.props;\n    alreadySeen.forEach((id) => this.getInfosAlreadySeen(id));\n  };\n\n  getInfosAlreadySeen = (id) => {\n    const url = `https://api.themoviedb.org/3/movie/${id}?api_key=${keyApi}&language=en-US`;\n    const { infoAlreadySeen } = this.state;\n    axios\n      .get(url)\n      .then((response) => response.data)\n      .then((informationsFilm) => {\n        infoAlreadySeen.push(informationsFilm);\n        this.setState({ infoAlreadySeen });\n      });\n  };\n\n  render() {\n    const { infoFavorites, infoAlreadySeen } = this.state;\n    return (\n      <>\n        <Container>\n          <H1>Favorite List</H1>\n          <Div>\n            {infoFavorites.map((essai) => (\n              <Movie\n                posterPath={essai.poster_path}\n                title={essai.original_title}\n                id={essai.id}\n              />\n            ))}\n          </Div>\n          <H1>Already seen</H1>\n          <Div>\n            {infoAlreadySeen.map((essai2) => (\n              <Movie\n                posterPath={essai2.poster_path}\n                title={essai2.original_title}\n                id={essai2.id}\n              />\n            ))}\n          </Div>\n        </Container>\n        <FixFooter>\n          <Footer />\n        </FixFooter>\n      </>\n    );\n  }\n}\n\nMyList.propTypes = {\n  alreadySeen: PropTypes.arrayOf(PropTypes.object).isRequired,\n  favorites: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default MyList;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/flaviostark/wildcodeschool/projets/tlse0920-js-p2-wildmovies/src/components/Trailer.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport ReactPlayer from \"react-player\";\nimport PropTypes from \"prop-types\";\nimport TrailerStyle from \"../style/TrailerCss\";\nimport YOUTUBE_URL from \"../const/ConstYoutube\";\nimport keyApi from \"../const/apiKey\";\n\nclass Trailer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getBandeAnnonce = () => {\n      // Ceci est la clé de l'API\n      const {\n        id\n      } = this.props;\n      axios.get(`https://api.themoviedb.org/3/movie/${id}/videos?api_key=${keyApi}&language=en-US`) // je reçois les données qui sont dans un tableau results et je cible la key\n      .then(response => response.data.results[0].key).then(trailer => this.setState({\n        bandeAnnonce: trailer\n      })).catch(() => this.setState({\n        bandeAnnonce: undefined\n      }));\n    };\n\n    this.state = {\n      bandeAnnonce: undefined\n    };\n  }\n\n  componentDidMount() {\n    this.getBandeAnnonce();\n  }\n\n  componentDidUpdate(prevProps) {\n    const prevId = prevProps.id;\n    const {\n      id\n    } = this.props;\n\n    if (prevId !== id) {\n      this.getBandeAnnonce();\n    }\n  }\n\n  render() {\n    const {\n      bandeAnnonce\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(TrailerStyle, {\n      children: bandeAnnonce ? /*#__PURE__*/_jsxDEV(ReactPlayer, {\n        url: `${YOUTUBE_URL + bandeAnnonce}`,\n        width: \"100%\",\n        height: \"600px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No Trailer Available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nTrailer.propTypes = {\n  id: PropTypes.number.isRequired\n};\nexport default Trailer;","map":{"version":3,"sources":["/home/flaviostark/wildcodeschool/projets/tlse0920-js-p2-wildmovies/src/components/Trailer.jsx"],"names":["React","Component","axios","ReactPlayer","PropTypes","TrailerStyle","YOUTUBE_URL","keyApi","Trailer","constructor","props","getBandeAnnonce","id","get","then","response","data","results","key","trailer","setState","bandeAnnonce","catch","undefined","state","componentDidMount","componentDidUpdate","prevProps","prevId","render","propTypes","number","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;AAEA,MAAMC,OAAN,SAAsBP,SAAtB,CAAgC;AAC9BQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAoBnBC,eApBmB,GAoBD,MAAM;AACtB;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAS,KAAKF,KAApB;AACAR,MAAAA,KAAK,CACFW,GADH,CAEK,sCAAqCD,EAAG,mBAAkBL,MAAO,iBAFtE,EAIE;AAJF,OAKGO,IALH,CAKSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,CAAcC,OAAd,CAAsB,CAAtB,EAAyBC,GAL/C,EAMGJ,IANH,CAMSK,OAAD,IAAa,KAAKC,QAAL,CAAc;AAAEC,QAAAA,YAAY,EAAEF;AAAhB,OAAd,CANrB,EAOGG,KAPH,CAOS,MAAM,KAAKF,QAAL,CAAc;AAAEC,QAAAA,YAAY,EAAEE;AAAhB,OAAd,CAPf;AAQD,KA/BkB;;AAEjB,SAAKC,KAAL,GAAa;AACXH,MAAAA,YAAY,EAAEE;AADH,KAAb;AAGD;;AAEDE,EAAAA,iBAAiB,GAAG;AAClB,SAAKd,eAAL;AACD;;AAEDe,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,UAAMC,MAAM,GAAGD,SAAS,CAACf,EAAzB;AACA,UAAM;AAAEA,MAAAA;AAAF,QAAS,KAAKF,KAApB;;AAEA,QAAIkB,MAAM,KAAKhB,EAAf,EAAmB;AACjB,WAAKD,eAAL;AACD;AACF;;AAeDkB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAER,MAAAA;AAAF,QAAmB,KAAKG,KAA9B;AACA,wBACE,QAAC,YAAD;AAAA,gBACGH,YAAY,gBACX,QAAC,WAAD;AACE,QAAA,GAAG,EAAG,GAAEf,WAAW,GAAGe,YAAa,EADrC;AAEE,QAAA,KAAK,EAAC,MAFR;AAGE,QAAA,MAAM,EAAC;AAHT;AAAA;AAAA;AAAA;AAAA,cADW,gBAOX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AAjD6B;;AAoDhCb,OAAO,CAACsB,SAAR,GAAoB;AAClBlB,EAAAA,EAAE,EAAER,SAAS,CAAC2B,MAAV,CAAiBC;AADH,CAApB;AAIA,eAAexB,OAAf","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport ReactPlayer from \"react-player\";\nimport PropTypes from \"prop-types\";\nimport TrailerStyle from \"../style/TrailerCss\";\nimport YOUTUBE_URL from \"../const/ConstYoutube\";\nimport keyApi from \"../const/apiKey\";\n\nclass Trailer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bandeAnnonce: undefined,\n    };\n  }\n\n  componentDidMount() {\n    this.getBandeAnnonce();\n  }\n\n  componentDidUpdate(prevProps) {\n    const prevId = prevProps.id;\n    const { id } = this.props;\n\n    if (prevId !== id) {\n      this.getBandeAnnonce();\n    }\n  }\n\n  getBandeAnnonce = () => {\n    // Ceci est la clé de l'API\n    const { id } = this.props;\n    axios\n      .get(\n        `https://api.themoviedb.org/3/movie/${id}/videos?api_key=${keyApi}&language=en-US`\n      )\n      // je reçois les données qui sont dans un tableau results et je cible la key\n      .then((response) => response.data.results[0].key)\n      .then((trailer) => this.setState({ bandeAnnonce: trailer }))\n      .catch(() => this.setState({ bandeAnnonce: undefined }));\n  };\n\n  render() {\n    const { bandeAnnonce } = this.state;\n    return (\n      <TrailerStyle>\n        {bandeAnnonce ? (\n          <ReactPlayer\n            url={`${YOUTUBE_URL + bandeAnnonce}`}\n            width=\"100%\"\n            height=\"600px\"\n          />\n        ) : (\n          <p>No Trailer Available</p>\n        )}\n      </TrailerStyle>\n    );\n  }\n}\n\nTrailer.propTypes = {\n  id: PropTypes.number.isRequired,\n};\n\nexport default Trailer;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/flaviostark/wildcodeschool/projets/tlse0920-js-p2-wildmovies/src/components/SearchBar.jsx\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container, Search, Button } from \"../style/SearchCss\";\n\nclass SearchBar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      event.preventDefault();\n      this.setState({\n        searchText: event.target.value\n      });\n    };\n\n    this.handleEnter = event => {\n      if (event.keyCode === 13) {\n        this.search();\n      }\n    };\n\n    this.search = () => {\n      const {\n        callback\n      } = this.props;\n      const {\n        searchText\n      } = this.state;\n      callback(searchText);\n    };\n\n    this.state = {\n      searchText: \"\",\n      placeHolder: \"Type your movie...\"\n    };\n  }\n\n  render() {\n    const {\n      placeHolder\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Search, {\n        onChange: this.handleChange,\n        onKeyUp: this.handleEnter,\n        type: \"text\",\n        placeholder: placeHolder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: this.search,\n        type: \"button\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nSearchBar.propTypes = {\n  callback: PropTypes.func.isRequired\n};\nexport default SearchBar;","map":{"version":3,"sources":["/home/flaviostark/wildcodeschool/projets/tlse0920-js-p2-wildmovies/src/components/SearchBar.jsx"],"names":["React","Component","PropTypes","Container","Search","Button","SearchBar","constructor","props","handleChange","event","preventDefault","setState","searchText","target","value","handleEnter","keyCode","search","callback","state","placeHolder","render","propTypes","func","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,MAA5B,QAA0C,oBAA1C;;AAEA,MAAMC,SAAN,SAAwBL,SAAxB,CAAkC;AAChCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAKnBC,YALmB,GAKHC,KAAD,IAAW;AACxBA,MAAAA,KAAK,CAACC,cAAN;AACA,WAAKC,QAAL,CAAc;AAAEC,QAAAA,UAAU,EAAEH,KAAK,CAACI,MAAN,CAAaC;AAA3B,OAAd;AACD,KARkB;;AAAA,SAUnBC,WAVmB,GAUJN,KAAD,IAAW;AACvB,UAAIA,KAAK,CAACO,OAAN,KAAkB,EAAtB,EAA0B;AACxB,aAAKC,MAAL;AACD;AACF,KAdkB;;AAAA,SAgBnBA,MAhBmB,GAgBV,MAAM;AACb,YAAM;AAAEC,QAAAA;AAAF,UAAe,KAAKX,KAA1B;AACA,YAAM;AAAEK,QAAAA;AAAF,UAAiB,KAAKO,KAA5B;AACAD,MAAAA,QAAQ,CAACN,UAAD,CAAR;AACD,KApBkB;;AAEjB,SAAKO,KAAL,GAAa;AAAEP,MAAAA,UAAU,EAAE,EAAd;AAAkBQ,MAAAA,WAAW,EAAE;AAA/B,KAAb;AACD;;AAmBDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAED,MAAAA;AAAF,QAAkB,KAAKD,KAA7B;AACA,wBACE,QAAC,SAAD;AAAA,8BACE,QAAC,MAAD;AACE,QAAA,QAAQ,EAAE,KAAKX,YADjB;AAEE,QAAA,OAAO,EAAE,KAAKO,WAFhB;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,WAAW,EAAEK;AAJf;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKH,MAAtB;AAA8B,QAAA,IAAI,EAAC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AAtC+B;;AAyClCZ,SAAS,CAACiB,SAAV,GAAsB;AACpBJ,EAAAA,QAAQ,EAAEjB,SAAS,CAACsB,IAAV,CAAeC;AADL,CAAtB;AAIA,eAAenB,SAAf","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container, Search, Button } from \"../style/SearchCss\";\n\nclass SearchBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { searchText: \"\", placeHolder: \"Type your movie...\" };\n  }\n\n  handleChange = (event) => {\n    event.preventDefault();\n    this.setState({ searchText: event.target.value });\n  };\n\n  handleEnter = (event) => {\n    if (event.keyCode === 13) {\n      this.search();\n    }\n  };\n\n  search = () => {\n    const { callback } = this.props;\n    const { searchText } = this.state;\n    callback(searchText);\n  };\n\n  render() {\n    const { placeHolder } = this.state;\n    return (\n      <Container>\n        <Search\n          onChange={this.handleChange}\n          onKeyUp={this.handleEnter}\n          type=\"text\"\n          placeholder={placeHolder}\n        />\n        <Button onClick={this.search} type=\"button\">\n          Search\n        </Button>\n      </Container>\n    );\n  }\n}\n\nSearchBar.propTypes = {\n  callback: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}
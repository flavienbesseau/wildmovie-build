{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/flaviostark/wildcodeschool/projets/tlse0920-js-p2-wildmovies/src/components/Recommendations.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport PropTypes from \"prop-types\";\nimport RecommendationsStyles from \"../style/RecommendationsStyles\";\nimport Movie from \"./Movie\";\nimport keyApi from \"../const/apiKey\";\n\nclass Recommendations extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getRecommendations = () => {\n      const {\n        id\n      } = this.props;\n      const firstPartLink = `https://api.themoviedb.org/3/movie/${id}/similar?api_key=`;\n      const url = `${firstPartLink}${keyApi}&language=en-US&page=1`;\n      axios.get(url).then(response => response.data).then(response => response.results).then(recommendationsArray => this.setState({\n        recommendations: recommendationsArray\n      })).catch(() => this.setState({\n        recommendations: []\n      }));\n    };\n\n    this.state = {\n      recommendations: []\n    };\n  }\n\n  componentDidMount() {\n    this.getRecommendations();\n  }\n\n  componentDidUpdate(prevProps) {\n    const prevId = prevProps.id;\n    const {\n      id\n    } = this.props;\n\n    if (prevId !== id) {\n      this.getRecommendations();\n    }\n  }\n\n  render() {\n    const {\n      recommendations\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(RecommendationsStyles, {\n      children: recommendations.length !== 0 ? recommendations.filter((reco, index) => index < 8).map(item => /*#__PURE__*/_jsxDEV(Movie, {\n        posterPath: item.poster_path,\n        title: item.title,\n        id: item.id\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No recommendations available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nRecommendations.propTypes = {\n  id: PropTypes.number.isRequired\n};\nexport default Recommendations;","map":{"version":3,"sources":["/home/flaviostark/wildcodeschool/projets/tlse0920-js-p2-wildmovies/src/components/Recommendations.jsx"],"names":["React","Component","axios","PropTypes","RecommendationsStyles","Movie","keyApi","Recommendations","constructor","props","getRecommendations","id","firstPartLink","url","get","then","response","data","results","recommendationsArray","setState","recommendations","catch","state","componentDidMount","componentDidUpdate","prevProps","prevId","render","length","filter","reco","index","map","item","poster_path","title","propTypes","number","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,qBAAP,MAAkC,gCAAlC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;AAEA,MAAMC,eAAN,SAA8BN,SAA9B,CAAwC;AACtCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAoBnBC,kBApBmB,GAoBE,MAAM;AACzB,YAAM;AAAEC,QAAAA;AAAF,UAAS,KAAKF,KAApB;AACA,YAAMG,aAAa,GAAI,sCAAqCD,EAAG,mBAA/D;AACA,YAAME,GAAG,GAAI,GAAED,aAAc,GAAEN,MAAO,wBAAtC;AACAJ,MAAAA,KAAK,CACFY,GADH,CACOD,GADP,EAEGE,IAFH,CAESC,QAAD,IAAcA,QAAQ,CAACC,IAF/B,EAGGF,IAHH,CAGSC,QAAD,IAAcA,QAAQ,CAACE,OAH/B,EAIGH,IAJH,CAISI,oBAAD,IACJ,KAAKC,QAAL,CAAc;AAAEC,QAAAA,eAAe,EAAEF;AAAnB,OAAd,CALJ,EAOGG,KAPH,CAOS,MAAM,KAAKF,QAAL,CAAc;AAAEC,QAAAA,eAAe,EAAE;AAAnB,OAAd,CAPf;AAQD,KAhCkB;;AAEjB,SAAKE,KAAL,GAAa;AACXF,MAAAA,eAAe,EAAE;AADN,KAAb;AAGD;;AAEDG,EAAAA,iBAAiB,GAAG;AAClB,SAAKd,kBAAL;AACD;;AAEDe,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,UAAMC,MAAM,GAAGD,SAAS,CAACf,EAAzB;AACA,UAAM;AAAEA,MAAAA;AAAF,QAAS,KAAKF,KAApB;;AAEA,QAAIkB,MAAM,KAAKhB,EAAf,EAAmB;AACjB,WAAKD,kBAAL;AACD;AACF;;AAgBDkB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEP,MAAAA;AAAF,QAAsB,KAAKE,KAAjC;AACA,wBACE,QAAC,qBAAD;AAAA,gBACGF,eAAe,CAACQ,MAAhB,KAA2B,CAA3B,GACCR,eAAe,CACZS,MADH,CACU,CAACC,IAAD,EAAOC,KAAP,KAAiBA,KAAK,GAAG,CADnC,EAEGC,GAFH,CAEQC,IAAD,iBACH,QAAC,KAAD;AACE,QAAA,UAAU,EAAEA,IAAI,CAACC,WADnB;AAEE,QAAA,KAAK,EAAED,IAAI,CAACE,KAFd;AAGE,QAAA,EAAE,EAAEF,IAAI,CAACvB;AAHX,SAIOuB,IAAI,CAACvB,EAJZ;AAAA;AAAA;AAAA;AAAA,cAHJ,CADD,gBAYC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAbJ;AAAA;AAAA;AAAA;AAAA,YADF;AAkBD;;AAvDqC;;AA0DxCJ,eAAe,CAAC8B,SAAhB,GAA4B;AAC1B1B,EAAAA,EAAE,EAAER,SAAS,CAACmC,MAAV,CAAiBC;AADK,CAA5B;AAIA,eAAehC,eAAf","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport PropTypes from \"prop-types\";\nimport RecommendationsStyles from \"../style/RecommendationsStyles\";\nimport Movie from \"./Movie\";\nimport keyApi from \"../const/apiKey\";\n\nclass Recommendations extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      recommendations: [],\n    };\n  }\n\n  componentDidMount() {\n    this.getRecommendations();\n  }\n\n  componentDidUpdate(prevProps) {\n    const prevId = prevProps.id;\n    const { id } = this.props;\n\n    if (prevId !== id) {\n      this.getRecommendations();\n    }\n  }\n\n  getRecommendations = () => {\n    const { id } = this.props;\n    const firstPartLink = `https://api.themoviedb.org/3/movie/${id}/similar?api_key=`;\n    const url = `${firstPartLink}${keyApi}&language=en-US&page=1`;\n    axios\n      .get(url)\n      .then((response) => response.data)\n      .then((response) => response.results)\n      .then((recommendationsArray) =>\n        this.setState({ recommendations: recommendationsArray })\n      )\n      .catch(() => this.setState({ recommendations: [] }));\n  };\n\n  render() {\n    const { recommendations } = this.state;\n    return (\n      <RecommendationsStyles>\n        {recommendations.length !== 0 ? (\n          recommendations\n            .filter((reco, index) => index < 8)\n            .map((item) => (\n              <Movie\n                posterPath={item.poster_path}\n                title={item.title}\n                id={item.id}\n                key={item.id}\n              />\n            ))\n        ) : (\n          <p>No recommendations available</p>\n        )}\n      </RecommendationsStyles>\n    );\n  }\n}\n\nRecommendations.propTypes = {\n  id: PropTypes.number.isRequired,\n};\n\nexport default Recommendations;\n"]},"metadata":{},"sourceType":"module"}
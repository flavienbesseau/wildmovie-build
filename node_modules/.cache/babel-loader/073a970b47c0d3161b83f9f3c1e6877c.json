{"ast":null,"code":"import _classCallCheck from\"/home/flaviostark/wildcodeschool/projets/tlse0920-js-p2-wildmovies/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/flaviostark/wildcodeschool/projets/tlse0920-js-p2-wildmovies/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/flaviostark/wildcodeschool/projets/tlse0920-js-p2-wildmovies/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/flaviostark/wildcodeschool/projets/tlse0920-js-p2-wildmovies/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import React,{Component}from\"react\";import axios from\"axios\";import Footer from\"./Footer\";import Movie from\"./Movie\";import keyApi from\"../const/apiKey\";import{FixFooter,Container,H1,Div}from\"../style/MyListCss\";var MyList=/*#__PURE__*/function(_Component){_inherits(MyList,_Component);var _super=_createSuper(MyList);function MyList(props){var _this;_classCallCheck(this,MyList);_this=_super.call(this,props);_this.getAllFavorites=function(){var favorites=_this.props.favorites;favorites.forEach(function(id){return _this.getInfosMovieFavorite(id);});};_this.getInfosMovieFavorite=function(id){var url=\"https://api.themoviedb.org/3/movie/\".concat(id,\"?api_key=\").concat(keyApi,\"&language=en-US\");var infoFavorites=_this.state.infoFavorites;axios.get(url).then(function(response){return response.data;}).then(function(informationsFilm){infoFavorites.push(informationsFilm);_this.setState({infoFavorites:infoFavorites});});};_this.getAllAlreadySeen=function(){var alreadySeen=_this.props.alreadySeen;alreadySeen.forEach(function(id){return _this.getInfosAlreadySeen(id);});};_this.getInfosAlreadySeen=function(id){var url=\"https://api.themoviedb.org/3/movie/\".concat(id,\"?api_key=\").concat(keyApi,\"&language=en-US\");var infoAlreadySeen=_this.state.infoAlreadySeen;axios.get(url).then(function(response){return response.data;}).then(function(informationsFilm){infoAlreadySeen.push(informationsFilm);_this.setState({infoAlreadySeen:infoAlreadySeen});});};_this.state={infoFavorites:[],infoAlreadySeen:[]};return _this;}_createClass(MyList,[{key:\"componentDidMount\",value:function componentDidMount(){this.getAllFavorites();this.getAllAlreadySeen();}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){var prevFavorites=prevProps.favorites;var prevAlreadySeen=prevProps.alreadySeen;var _this$props=this.props,favorites=_this$props.favorites,alreadySeen=_this$props.alreadySeen;if(JSON.stringify(prevFavorites)!==JSON.stringify(favorites)){this.getAllFavorites();}if(JSON.stringify(prevAlreadySeen)!==JSON.stringify(alreadySeen)){this.getAllAlreadySeen();}}},{key:\"render\",value:function render(){var _this$state=this.state,infoFavorites=_this$state.infoFavorites,infoAlreadySeen=_this$state.infoAlreadySeen;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(H1,{children:\"Favorite List\"}),/*#__PURE__*/_jsx(Div,{children:infoFavorites.map(function(essai){return/*#__PURE__*/_jsx(Movie,{posterPath:essai.poster_path,title:essai.original_title,id:essai.id});})}),/*#__PURE__*/_jsx(H1,{children:\"Already seen\"}),/*#__PURE__*/_jsx(Div,{children:infoAlreadySeen.map(function(essai2){return/*#__PURE__*/_jsx(Movie,{posterPath:essai2.poster_path,title:essai2.original_title,id:essai2.id});})})]}),/*#__PURE__*/_jsx(FixFooter,{children:/*#__PURE__*/_jsx(Footer,{})})]});}}]);return MyList;}(Component);export default MyList;","map":{"version":3,"sources":["/home/flaviostark/wildcodeschool/projets/tlse0920-js-p2-wildmovies/src/components/MyList.jsx"],"names":["React","Component","axios","Footer","Movie","keyApi","FixFooter","Container","H1","Div","MyList","props","getAllFavorites","favorites","forEach","id","getInfosMovieFavorite","url","infoFavorites","state","get","then","response","data","informationsFilm","push","setState","getAllAlreadySeen","alreadySeen","getInfosAlreadySeen","infoAlreadySeen","prevProps","prevFavorites","prevAlreadySeen","JSON","stringify","map","essai","poster_path","original_title","essai2"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport PropTypes from \"prop-types\";\nimport Footer from \"./Footer\";\nimport Movie from \"./Movie\";\nimport keyApi from \"../const/apiKey\";\nimport { FixFooter, Container, H1, Div } from \"../style/MyListCss\";\n\nclass MyList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      infoFavorites: [],\n      infoAlreadySeen: [],\n    };\n  }\n\n  componentDidMount() {\n    this.getAllFavorites();\n    this.getAllAlreadySeen();\n  }\n\n  componentDidUpdate(prevProps) {\n    const prevFavorites = prevProps.favorites;\n    const prevAlreadySeen = prevProps.alreadySeen;\n    const { favorites, alreadySeen } = this.props;\n\n    if (JSON.stringify(prevFavorites) !== JSON.stringify(favorites)) {\n      this.getAllFavorites();\n    }\n\n    if (JSON.stringify(prevAlreadySeen) !== JSON.stringify(alreadySeen)) {\n      this.getAllAlreadySeen();\n    }\n  }\n\n  getAllFavorites = () => {\n    const { favorites } = this.props;\n    favorites.forEach((id) => this.getInfosMovieFavorite(id));\n  };\n\n  getInfosMovieFavorite = (id) => {\n    const url = `https://api.themoviedb.org/3/movie/${id}?api_key=${keyApi}&language=en-US`;\n    const { infoFavorites } = this.state;\n    axios\n      .get(url)\n      .then((response) => response.data)\n      .then((informationsFilm) => {\n        infoFavorites.push(informationsFilm);\n        this.setState({ infoFavorites });\n      });\n  };\n\n  getAllAlreadySeen = () => {\n    const { alreadySeen } = this.props;\n    alreadySeen.forEach((id) => this.getInfosAlreadySeen(id));\n  };\n\n  getInfosAlreadySeen = (id) => {\n    const url = `https://api.themoviedb.org/3/movie/${id}?api_key=${keyApi}&language=en-US`;\n    const { infoAlreadySeen } = this.state;\n    axios\n      .get(url)\n      .then((response) => response.data)\n      .then((informationsFilm) => {\n        infoAlreadySeen.push(informationsFilm);\n        this.setState({ infoAlreadySeen });\n      });\n  };\n\n  render() {\n    const { infoFavorites, infoAlreadySeen } = this.state;\n    return (\n      <>\n        <Container>\n          <H1>Favorite List</H1>\n          <Div>\n            {infoFavorites.map((essai) => (\n              <Movie\n                posterPath={essai.poster_path}\n                title={essai.original_title}\n                id={essai.id}\n              />\n            ))}\n          </Div>\n          <H1>Already seen</H1>\n          <Div>\n            {infoAlreadySeen.map((essai2) => (\n              <Movie\n                posterPath={essai2.poster_path}\n                title={essai2.original_title}\n                id={essai2.id}\n              />\n            ))}\n          </Div>\n        </Container>\n        <FixFooter>\n          <Footer />\n        </FixFooter>\n      </>\n    );\n  }\n}\n\nMyList.propTypes = {\n  alreadySeen: PropTypes.arrayOf(PropTypes.object).isRequired,\n  favorites: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default MyList;\n"]},"metadata":{},"sourceType":"module"}